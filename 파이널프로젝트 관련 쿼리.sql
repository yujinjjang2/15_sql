-- SYS 계정으로 mung 계정 생성 구문
ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;
CREATE USER mung IDENTIFIED BY mung1234;

GRANT RESOURCE, CONNECT TO mung;

ALTER USER mung DEFAULT TABLESPACE SYSTEM QUOTA UNLIMITED ON SYSTEM;

-- -------------------------------------------------------------------------------------------

-- mung으로 접속!

-- MEMBER TABLE 생성
DROP TABLE MEMBER;

CREATE TABLE MEMBER
(
  MEMBER_NO     NUMBER         NOT NULL PRIMARY KEY,
  MEMBER_ID     VARCHAR2(30)   NOT NULL,
  MEMBER_PW     VARCHAR2(200)  NOT NULL,
  MEMBER_EMAIL  VARCHAR2(100)  NOT NULL,
  MEMBER_NAME   VARCHAR2(30)   NOT NULL,
  MEMBER_TEL    VARCHAR2(30)   NOT NULL,
  MEMBER_NICKNAME VARCHAR2(50) NOT NULL,
  MEMBER_ADDRESS VARCHAR2(500),
  MEMBER_PROFILE VARCHAR2(300),
  MEMBER_ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL,
  ADMIN_YN		CHAR(1) DEFAULT 'N' NOT NULL,
  MEMBER_DEL_YN CHAR(1) DEFAULT 'N' NOT NULL
)
;

SELECT * FROM MEMBER;

-- MEMBER TABLE 코멘트
COMMENT ON COLUMN MEMBER.MEMBER_NO  IS '회원번호';
COMMENT ON COLUMN MEMBER.MEMBER_ID  IS '회원아이디';
COMMENT ON COLUMN MEMBER.MEMBER_PW  IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_EMAIL  IS '이메일';
COMMENT ON COLUMN MEMBER.MEMBER_NAME  IS '이름';
COMMENT ON COLUMN MEMBER.MEMBER_TEL  IS '전화번호';
COMMENT ON COLUMN MEMBER.MEMBER_NICKNAME  IS '닉네임';
COMMENT ON COLUMN MEMBER.MEMBER_ADDRESS  IS '주소';
COMMENT ON COLUMN MEMBER.MEMBER_PROFILE  IS '프로필';
COMMENT ON COLUMN MEMBER.MEMBER_ENROLL_DATE  IS '회원가입일';
COMMENT ON COLUMN MEMBER.ADMIN_YN  IS '권한여부';
COMMENT ON COLUMN MEMBER.MEMBER_DEL_YN  IS '탈퇴여부';

-- MEMBER TABLE MEMBER_NO 시퀀스 생성
CREATE SEQUENCE SEQ_MEMBER_NO;

-- MEMBER TABLE 데이터 삽입

-- 1) 관리자 계정
INSERT INTO MEMBER 
	VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user01', 'pass01', 'o3odw98@gmail.com', '유저일', '010-1111-2222', '유쩌일', 
			'99999^^^서울시 숭인로 12길^^^2층', NULL, DEFAULT, 'Y', DEFAULT);
	
-- 2) 일반 계정		
INSERT INTO MEMBER 
	VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user02', 'pass02', 'user02@kh.or.kr', '유저이', '010-1111-3333', '유쩌이', 
			'88888^^^서울시 숭인로 11길^^^3층', NULL, DEFAULT, DEFAULT, DEFAULT);
		
COMMIT;

SELECT * FROM MEMBER;

-- -------------------------------------------------------------------------------------------

-- 활동일지 TABLE 생성
DROP TABLE ACTIVITY_LOG;

DROP SEQUENCE SEQ_ACTIVITY_NO;

CREATE TABLE ACTIVITY_LOG
(
  ACTIVITY_NO       NUMBER         NOT NULL PRIMARY KEY,
  ACTIVITY_IMG      VARCHAR2(300)  NOT NULL,
  ACTIVITY_CONTENT  VARCHAR2(4000) NULL,
  ACTIVITY_DATE     DATE     DEFAULT SYSDATE    NOT NULL
)
;

SELECT * FROM ACTIVITY_LOG;

-- 활동일지 TABLE 코멘트
COMMENT ON COLUMN ACTIVITY_LOG.ACTIVITY_NO  IS '활동일지번호';
COMMENT ON COLUMN ACTIVITY_LOG.ACTIVITY_IMG  IS '활동사진';
COMMENT ON COLUMN ACTIVITY_LOG.ACTIVITY_CONTENT  IS '활동내용';
COMMENT ON COLUMN ACTIVITY_LOG.ACTIVITY_DATE  IS '등록일';

-- ACTIVITY_LOG TABLE ACTIVITY_NO 시퀀스 생성
CREATE SEQUENCE SEQ_ACTIVITY_NO;

-- ACTIVITY_LOG TABLE 데이터 삽입
INSERT INTO ACTIVITY_LOG 
	VALUES(SEQ_ACTIVITY_NO.NEXTVAL, '/dog1', '오늘은 들판으로 나가서 신나게 뛰어놀았어요!', DEFAULT);
		
COMMIT;

SELECT * FROM ACTIVITY_LOG;

-- -------------------------------------------------------------------------------------------

-- 활동일지 좋아요 TABLE 생성
DROP TABLE ACTIVITY_LOG_LIKE;

DROP SEQUENCE SEQ_ACTIVITY_LIKE_NO;

CREATE TABLE ACTIVITY_LOG_LIKE
(
  ACTIVITY_LIKE_NO  NUMBER         NOT NULL PRIMARY KEY,
  MEMBER_NO      	NUMBER			NOT NULL,
  ACTIVITY_NO       NUMBER 			NOT NULL
)
;

-- 외래키 설정

--ALTER TABLE [FK를 생성시킬 테이블명]
--ADD CONSTRAINT [FK명] foreign KEY(FK가 될 컬럼명) references [PK가 위치하는 테이블] ([PK컬럼명]);

ALTER TABLE ACTIVITY_LOG_LIKE
ADD CONSTRAINT FK_MEMBER_NO foreign KEY(MEMBER_NO) references MEMBER(MEMBER_NO);

ALTER TABLE ACTIVITY_LOG_LIKE
ADD CONSTRAINT FK_ACTIVITY_NO foreign KEY(ACTIVITY_NO) references ACTIVITY_LOG(ACTIVITY_NO);

SELECT * FROM ACTIVITY_LOG_LIKE;

-- 활동일지 좋아요 TABLE 코멘트
COMMENT ON COLUMN ACTIVITY_LOG_LIKE.ACTIVITY_LIKE_NO  IS '활동일지좋아요번호';
COMMENT ON COLUMN ACTIVITY_LOG_LIKE.MEMBER_NO  IS '회원번호';
COMMENT ON COLUMN ACTIVITY_LOG_LIKE.ACTIVITY_NO  IS '활동일지번호';

-- ACTIVITY_LOG_LIKE TABLE ACTIVITY_LIKE_NO 시퀀스 생성
CREATE SEQUENCE SEQ_ACTIVITY_LIKE_NO;

-- ACTIVITY_LOG_LIKE TABLE 데이터 삽입
INSERT INTO ACTIVITY_LOG_LIKE 
	VALUES(SEQ_ACTIVITY_LIKE_NO.NEXTVAL, 1, 1);
		
COMMIT;

SELECT * FROM ACTIVITY_LOG_LIKE;

-- -------------------------------------------------------------------------------------------

-- 이메일 확인(인증키) TABLE 생성
DROP TABLE EMAIL_CHECK;

DROP SEQUENCE SEQ_CHECK_NO;

CREATE TABLE EMAIL_CHECK
(
  CHECK_NO  		NUMBER         NOT NULL PRIMARY KEY,
  CHECK_KEY      	CHAR(6)			NOT NULL,
  CHECK_EMAIL       VARCHAR2(100) 	NOT NULL,
  CHECK_DATE		DATE			DEFAULT SYSDATE    NOT NULL	
)
;

-- 이메일 확인(인증키) TABLE 코멘트
COMMENT ON COLUMN EMAIL_CHECK.CHECK_NO  IS '인증키번호';
COMMENT ON COLUMN EMAIL_CHECK.CHECK_KEY  IS '인증키';
COMMENT ON COLUMN EMAIL_CHECK.CHECK_EMAIL  IS '인증이메일';
COMMENT ON COLUMN EMAIL_CHECK.CHECK_DATE  IS '등록일';

-- 이메일 확인(인증키) TABLE CHECK_NO 시퀀스 생성
CREATE SEQUENCE SEQ_CHECK_NO;

SELECT * FROM EMAIL_CHECK;







-- -------------------------------------------------------------------------------------------

-- 로그인
SELECT MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_EMAIL, MEMBER_NAME, MEMBER_TEL, MEMBER_NICKNAME, MEMBER_ADDRESS, MEMBER_PROFILE, 
TO_CHAR(MEMBER_ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') AS MEMBER_ENROLL_DATE, ADMIN_YN, MEMBER_DEL_YN
FROM "MEMBER"
WHERE MEMBER_DEL_YN = 'N'
AND MEMBER_ID = 'user01';




